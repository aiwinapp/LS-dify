const translation = {
  common: {
    editing: 'Редактирование',
    autoSaved: 'Автоматически сохранено',
    unpublished: 'Неопубликовано',
    published: 'Опубликовано',
    publish: 'Опубликовать',
    update: 'Обновить',
    run: 'Запустить',
    running: 'Выполняется',
    inRunMode: 'В режиме выполнения',
    inPreview: 'В предварительном просмотре',
    inPreviewMode: 'В режиме предварительного просмотра',
    preview: 'Предварительный просмотр',
    viewRunHistory: 'Просмотреть историю запусков',
    runHistory: 'История запусков',
    goBackToEdit: 'Вернуться к редактированию',
    conversationLog: 'Журнал разговоров',
    features: 'Функции',
    debugAndPreview: 'Отладка и предварительный просмотр',
    restart: 'Перезапустить',
    currentDraft: 'Текущий черновик',
    currentDraftUnpublished: 'Текущий черновик не опубликован',
    latestPublished: 'Последняя опубликованная',
    publishedAt: 'Опубликовано',
    restore: 'Восстановить',
    runApp: 'Запустить приложение',
    batchRunApp: 'Пакетный запуск приложения',
    accessAPIReference: 'Доступ к ссылке на API',
    embedIntoSite: 'Встроить в сайт',
    addTitle: 'Добавить название...',
    addDescription: 'Добавить описание...',
    noVar: 'Нет переменной',
    searchVar: 'Поиск переменной',
    variableNamePlaceholder: 'Название переменной',
    setVarValuePlaceholder: 'Установить переменную',
    needConnecttip: 'Этот шаг не подключен к чему-либо',
    maxTreeDepth: 'Максимальный лимит {{depth}} узлов на ветку',
    needEndNode: 'Необходимо добавить блок "Конец"',
    needAnswerNode: 'Необходимо добавить блок "Ответ"',
    workflowProcess: 'Процесс рабочего процесса',
    notRunning: 'Еще не запущено',
    previewPlaceholder: 'Введите содержимое в поле ниже, чтобы начать отладку чат-бота',
    effectVarConfirm: {
      title: 'Удалить переменную',
      content: 'Эта переменная используется в других узлах. Вы все еще хотите ее удалить?',
    },
    insertVarTip: 'Нажмите клавишу "/" для быстрого вставления',
    processData: 'Обработка данных',
    input: 'Вход',
    output: 'Выход',
  },
  errorMsg: {
    fieldRequired: '{{field}} является обязательным',
    authRequired: 'Требуется авторизация',
    invalidJson: '{{field}} недействительный JSON',
    fields: {
      variable: 'Название переменной',
      variableValue: 'Значение переменной',
      code: 'Код',
      model: 'Модель',
      rerankModel: 'Модель пересортировки',
    },
    invalidVariable: 'Недействительная переменная',
  },
  singleRun: {
    testRun: 'Тестовый запуск',
    startRun: 'Начать запуск',
    running: 'Выполняется',
  },
  tabs: {
    'searchBlock': 'Поиск блока',
    'blocks': 'Блоки',
    'builtInTool': 'Встроенный инструмент',
    'customTool': 'Специальный инструмент',
    'question-understand': 'Понимание вопросов',
    'logic': 'Логика',
    'transform': 'Трансформация',
    'utilities': 'Утилиты',
    'noResult': 'Совпадений не найдено',
  },
  blocks: {
    'start': 'Начало',
    'end': 'Конец',
    'answer': 'Ответ',
    'llm': 'LLM',
    'knowledge-retrieval': 'Поиск знаний',
    'question-classifier': 'Классификатор вопросов',
    'if-else': 'Если / Иначе',
    'code': 'Код',
    'template-transform': 'Шаблон',
    'http-request': 'HTTP-запрос',
    'variable-assigner': 'Назначение переменных',
  },
  blocksAbout: {
    'start': 'Определите начальные параметры для запуска рабочего процесса',
    'end': 'Определите конец и тип результата рабочего процесса',
    'answer': 'Определите содержимое ответа чат-разговора',
    'llm': 'Вызов больших языковых моделей для ответа на вопросы или обработки естественного языка',
    'knowledge-retrieval': 'Позволяет вам запрашивать текстовый контент, относящийся к вопросам пользователя, знаний',
    'question-classifier': 'Определите условия классификации пользователей, LLM может определить, как прогрессирует разговор на основе описания классификации',
    'if-else': 'Позволяет вам разветвлять рабочий процесс на две ветки на основе условий if / else',
    'code': 'Выполнить фрагмент кода Python или NodeJS для реализации собственной логики',
    'template-transform': 'Преобразовать данные в строку, используя синтаксис шаблона Jinja',
    'http-request': 'Позволяет отправлять серверные запросы через протокол HTTP',
    'variable-assigner': 'Назначьте переменные в разных ветках той же переменной, чтобы обеспечить единую конфигурацию после-узлов',
  },
  operator: {
    zoomIn: 'Увеличить',
    zoomOut: 'Уменьшить',
    zoomTo50: 'Масштабировать до 50%',
    zoomTo100: 'Масштабировать до 100%',
    zoomToFit: 'Подогнать по ширине',
  },
  panel: {
    userInputField: 'Поле ввода пользователя',
    changeBlock: 'Изменить блок',
    helpLink: 'Ссылка на справку',
    about: 'О',
    createdBy: 'Создано',
    nextStep: 'Следующий шаг',
    addNextStep: 'Добавить следующий блок в этот рабочий процесс',
    selectNextStep: 'Выберите следующий блок',
    runThisStep: 'Запустить этот шаг',
    checklist: 'Контрольный список',
    checklistTip: 'Убедитесь, что все вопросы решены перед публикацией',
    checklistResolved: 'Все вопросы решены',
    organizeBlocks: 'Организовать блоки',
    change: 'Изменить',
  },
  nodes: {
    common: {
      outputVars: 'Выходные переменные',
      insertVarTip: 'Вставить переменную',
      memory: {
        memory: 'Память',
        memoryTip: 'Настройки чат-памяти',
        windowSize: 'Размер окна',
        conversationRoleName: 'Название роли разговора',
        user: 'Префикс пользователя',
        assistant: 'Префикс помощника',
      },
      memories: {
        title: 'Памяти',
        tip: 'Чат-память',
        builtIn: 'Встроенный',
      },
    },
    start: {
      required: 'обязательно',
      inputField: 'Поле ввода',
      builtInVar: 'Встроенные переменные',
      outputVars: {
        query: 'Вход пользователя',
        memories: {
          des: 'История разговоров',
          type: 'тип сообщения',
          content: 'содержимое сообщения',
        },
        files: 'Список файлов',
      },
      noVarTip: 'Установите входные данные, которые можно использовать в рабочем процессе',
    },
    end: {
      outputs: 'Выходные данные',
      output: {
        type: 'тип выхода',
        variable: 'выходная переменная',
      },
      type: {
        'none': 'Ничего',
        'plain-text': 'Простой текст',
        'structured': 'Структурированный',
      },
    },
    answer: {
      answer: 'Ответ',
      outputVars: 'Выходные переменные',
    },
    llm: {
      model: 'модель',
      variables: 'переменные',
      context: 'контекст',
      contextTooltip: 'Вы можете импортировать знания как контекст',
      notSetContextInPromptTip: 'Чтобы включить функцию контекста, пожалуйста, заполните переменную контекста в PROMPT.',
      prompt: 'подсказка',
      roleDescription: {
        system: 'Предоставить высокоуровневые инструкции для разговора',
        user: 'Предоставить инструкции, запросы или любой текстовый ввод для модели',
        assistant: 'Ответы модели на основе сообщений пользователя',
      },
      addMessage: 'Добавить сообщение',
      vision: 'видение',
      files: 'Файлы',
      resolution: {
        name: 'Разрешение',
        high: 'Высокое',
        low: 'Низкое',
      },
      outputVars: {
        output: 'Создание содержимого',
        usage: 'Информация об использовании модели',
      },
      singleRun: {
        variable: 'Переменная',
      },
    },
    knowledgeRetrieval: {
      queryVariable: 'Запрос переменной',
      knowledge: 'Знания',
      outputVars: {
        output: 'Извлеченные сегментированные данные',
        content: 'Сегментированное содержимое',
        title: 'Сегментированный заголовок',
        icon: 'Сегментированная иконка',
        url: 'Сегментированный URL',
        metadata: 'Другие метаданные',
      },
    },
    http: {
      inputVars: 'Входные переменные',
      api: 'API',
      apiPlaceholder: 'Введите URL, наберите «/» для вставки переменной',
      notStartWithHttp: 'API должно начинаться с http:// или https://',
      key: 'Ключ',
      value: 'Значение',
      bulkEdit: 'Массовое редактирование',
      keyValueEdit: 'Редактирование Ключ-Значение',
      headers: 'Заголовки',
      params: 'Параметры',
      body: 'Тело',
      outputVars: {
        body: 'Содержимое ответа',
        statusCode: 'Код статуса ответа',
        headers: 'Список заголовков ответа JSON',
        files: 'Список файлов',
      },
      authorization: {
        'authorization': 'Авторизация',
        'authorizationType': 'Тип авторизации',
        'no-auth': 'Нет',
        'api-key': 'API-Key',
        'auth-type': 'Тип авторизации',
        'basic': 'Базовая',
        'bearer': 'Bearer',
        'custom': 'Пользовательская',
        'api-key-title': 'Ключ API',
        'header': 'Заголовок',
      },
      insertVarPlaceholder: 'наберите \'/\' для вставки переменной',
      timeout: {
        title: 'Время истекло',
        connectLabel: 'Тайм-аут соединения',
        connectPlaceholder: 'Введите время тайм-аута соединения в секундах',
        readLabel: 'Тайм-аут чтения',
        readPlaceholder: 'Введите время тайм-аута чтения в секундах',
        writeLabel: 'Тайм-аут записи',
        writePlaceholder: 'Введите время тайм-аута записи в секундах',
      },
    },
    code: {
      inputVars: 'Входные переменные',
      outputVars: 'Выходные переменные',
    },
    templateTransform: {
      inputVars: 'Входные переменные',
      code: 'Код',
      codeSupportTip: 'Поддерживается только Jinja2',
      outputVars: {
        output: 'Преобразованное содержимое',
      },
    },
    ifElse: {
      if: 'Если',
      else: 'Иначе',
      elseDescription: 'Используется для определения логики, которая должна выполняться, когда условие if не выполняется.',
      and: 'и',
      or: 'или',
      operator: 'Оператор',
      notSetVariable: 'Сначала установите переменную',
      comparisonOperator: {
        'contains': 'содержит',
        'not contains': 'не содержит',
        'start with': 'начинается с',
        'end with': 'заканчивается на',
        'is': 'является',
        'is not': 'не является',
        'empty': 'пустой',
        'not empty': 'не пустой',
        'null': 'нулевой',
        'not null': 'не нулевой',
      },
      enterValue: 'Введите значение',
      addCondition: 'Добавить условие',
      conditionNotSetup: 'Условие НЕ настроено',
    },
    variableAssigner: {
      title: 'Назначение переменных',
      outputType: 'Тип выхода',
      outputVarType: 'Тип выходной переменной',
      varNotSet: 'Переменная не установлена',
      noVarTip: 'Добавьте переменные для назначения',
      type: {
        string: 'Строка',
        number: 'Число',
        object: 'Объект',
        array: 'Массив',
      },
      outputVars: {
        output: 'Значение назначенной переменной',
      },
    },
    tool: {
      toAuthorize: 'Авторизоваться',
      inputVars: 'Входные переменные',
      outputVars: {
        text: 'содержимое, сгенерированное инструментом',
        files: {
          title: 'файлы, сгенерированные инструментом',
          type: 'Тип поддержки. Сейчас поддерживаются только изображения',
          transfer_method: 'Метод передачи. Значения - удаленный URL или локальный файл',
          url: 'URL изображения',
          upload_file_id: 'Идентификатор загруженного файла',
        },
      },
    },
    questionClassifiers: {
      model: 'модель',
      inputVars: 'Входные переменные',
      outputVars: {
        className: 'Название класса',
      },
      class: 'Класс',
      classNamePlaceholder: 'Напишите название вашего класса',
      advancedSetting: 'Расширенная настройка',
      topicName: 'Название темы',
      topicPlaceholder: 'Напишите название вашей темы',
      addClass: 'Добавить класс',
      instruction: 'Инструкция',
      instructionPlaceholder: 'Напишите вашу инструкцию',
    },
  },
  tracing: {
    stopBy: 'Остановлено пользователем {{user}}',
  },
}

export default translation
